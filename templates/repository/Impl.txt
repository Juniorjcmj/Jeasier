package #PACKAGE;

import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;

import org.hibernate.Criteria;
import org.hibernate.Session;
import org.hibernate.criterion.MatchMode;
import org.hibernate.criterion.Projections;
import org.hibernate.criterion.Restrictions;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageImpl;
import org.springframework.data.domain.Pageable;
import org.springframework.util.StringUtils;

import #IMPORTHELPER;
import #IMPORTFILTER;
import #IMPORTCLASS;



public class #NAMECLASSIMPL implements #NAMECLASSHELPER {

	@PersistenceContext
	private EntityManager manager;

	@SuppressWarnings("unchecked")
	public Page<#NAMECLASS> filtrar(#NAMECLASSFILTER  filtro, Pageable pageable) {
		Criteria criteria = manager.unwrap(Session.class).createCriteria(#NAMECLASS.class);

		int paginaAtual = pageable.getPageNumber();
		int totalRegistrosPorPagina = pageable.getPageSize();
		int primeiroRegistro = paginaAtual * totalRegistrosPorPagina;

		criteria.setFirstResult(primeiroRegistro);
		criteria.setMaxResults(totalRegistrosPorPagina);

		adicionarFiltro(filtro, criteria);

		return new PageImpl<>(criteria.list(), pageable, total(filtro));
	}

	private Long total(#NAMECLASSFILTER filtro) {

		Criteria criteria = manager.unwrap(Session.class).createCriteria(#NAMECLASS.class);
		adicionarFiltro(filtro, criteria);
		criteria.setProjection(Projections.rowCount());
		return (Long) criteria.uniqueResult();
	}

	private void adicionarFiltro(#NAMECLASSFILTER filtro, Criteria criteria) {
		if (filtro != null) {
			
          #FILTERS

		}
	}

}
